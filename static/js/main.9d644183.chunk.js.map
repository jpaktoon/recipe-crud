{"version":3,"sources":["RecipeCreate.js","RecipeList.js","RecipeData.js","App.js","index.js"],"names":["RecipeCreate","_ref","recipes","setRecipes","name","setName","useState","cuisine","setCuisine","photo","setPhoto","ingredients","setIngredients","preparation","setPreparation","React","createElement","htmlFor","id","type","onChange","event","target","value","onClick","preventDefault","RecipeList","rows","map","_ref2","index","key","src","alt","concat","className","updatedRecipes","filter","recipe","handleClick","RecipeData","App","ReactDOM","createRoot","document","querySelector","render"],"mappings":"qNA8GeA,MA5Gf,SAAqBC,GAA2B,IAA1B,QAAEC,EAAO,WAAEC,GAAYF,EAK3C,MAAOG,EAAMC,GAAWC,mBAAS,KAC1BC,EAASC,GAAcF,mBAAS,KAChCG,EAAOC,GAAYJ,mBAAS,KAC5BK,EAAaC,GAAkBN,mBAAS,KACxCO,EAAaC,GAAkBR,mBAAS,IA+B/C,OACES,IAAAC,cAAA,QAAMZ,KAAK,UACTW,IAAAC,cAAA,aACED,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UACED,IAAAC,cAAA,SAAOC,QAAQ,QACbF,IAAAC,cAAA,SACEE,GAAG,OACHC,KAAK,OACLf,KAAK,OACLgB,SAxCUC,GAAUhB,EAAQgB,EAAMC,OAAOC,OAyCzCA,MAAOnB,MAIbW,IAAAC,cAAA,UACED,IAAAC,cAAA,SAAOC,QAAQ,WACbF,IAAAC,cAAA,SACEE,GAAG,UACHC,KAAK,OACLf,KAAK,UACLgB,SAlDaC,GAAUb,EAAWa,EAAMC,OAAOC,OAmD/CA,MAAOhB,MAIbQ,IAAAC,cAAA,UACED,IAAAC,cAAA,SAAOC,QAAQ,SACbF,IAAAC,cAAA,SACEE,GAAG,QACHC,KAAK,OACLf,KAAK,QACLgB,SA5DWC,GAAUX,EAASW,EAAMC,OAAOC,OA6D3CA,MAAOd,MAIbM,IAAAC,cAAA,UACED,IAAAC,cAAA,YACEE,GAAG,cACHC,KAAK,OACLf,KAAK,cACLgB,SArEmBC,GAAUT,EAAeS,EAAMC,OAAOC,OAsEzDA,MAAOZ,KAGXI,IAAAC,cAAA,UACED,IAAAC,cAAA,YACEE,GAAG,cACHC,KAAK,OACLf,KAAK,cACLgB,SA7EmBC,GAAUP,EAAeO,EAAMC,OAAOC,OA8EzDA,MAAOV,KAGXE,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAQQ,QAhFCH,IACnBA,EAAMI,iBAYNtB,EAAW,IAAID,EATG,CAChBE,OACAG,UACAE,QACAE,cACAE,iBAOFR,EAAQ,IACRG,EAAW,IACXE,EAAS,IACTE,EAAe,IACfE,EAAe,KA4DyBK,KAAK,UAAS,gBCjD3CO,MAhDf,SAAmBzB,GAAyB,IAAxB,QAACC,EAAO,WAAEC,GAAWF,EAMvC,MAQM0B,EAAOzB,EAAQ0B,IAAI,CAAAC,EAAqDC,KAAK,IAAzD,KAAE1B,EAAI,QAAEG,EAAO,MAAEE,EAAK,YAAEE,EAAW,YAAEE,GAAagB,EAAA,OAC1Ed,IAAAC,cAAA,MAAIe,IAAKD,GACPf,IAAAC,cAAA,UAAKZ,GACLW,IAAAC,cAAA,UAAKT,GACLQ,IAAAC,cAAA,UACED,IAAAC,cAAA,OAAKgB,IAAKvB,EAAOwB,IAAG,GAAAC,OAAK9B,MAE3BW,IAAAC,cAAA,MAAImB,UAAU,cAAapB,IAAAC,cAAA,SAAIL,IAC/BI,IAAAC,cAAA,MAAImB,UAAU,cAAapB,IAAAC,cAAA,SAAIH,IAC/BE,IAAAC,cAAA,UAAID,IAAAC,cAAA,UAAQZ,KAAK,SAASoB,QAASA,IAjBlBpB,KAEnB,MAAMgC,EAAiBlC,EAAQmC,OAAQC,GAAWA,EAAOlC,OAASA,GAGlED,EAAWiC,IAYgCG,CAAYnC,IAAO,cAIhE,OACEW,IAAAC,cAAA,OAAKmB,UAAU,eACbpB,IAAAC,cAAA,aACED,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,WACJD,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,UAAI,eACJD,IAAAC,cAAA,UAAI,aAGRD,IAAAC,cAAA,aACGW,MCrBMa,MAjBE,CACf,CACEpC,KAAM,uBACNG,QAAS,WACTE,MAAO,gGACPE,YAAa,sJACbE,YAAa,4RAEf,CACET,KAAM,YACNG,QAAS,UACTE,MAAO,4EACPE,YAAa,mNACbE,YAAa,kKCGJ4B,MAff,WACE,MAAOvC,EAASC,GAAcG,mBAASkC,GAKvC,OACEzB,IAAAC,cAAA,OAAKmB,UAAU,OACbpB,IAAAC,cAAA,cAAQD,IAAAC,cAAA,UAAI,2BACZD,IAAAC,cAACU,EAAU,CAACxB,QAASA,EAASC,WAAYA,IAC1CY,IAAAC,cAAChB,EAAY,CAACE,QAASA,EAASC,WAAYA,MCXlDuC,IAASC,WAAWC,SAASC,cAAc,UACxCC,OAAO/B,IAAAC,cAACyB,EAAG,Q","file":"static/js/main.9d644183.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction RecipeCreate({ recipes, setRecipes }) {\n  // TODO: When the form is submitted, a new recipe should be created, and the form contents cleared.\n  // TODO: Add the required input and textarea form elements.\n  // TODO: Add the required submit and change handlers.\n\n  const [name, setName] = useState(\"\");\n  const [cuisine, setCuisine] = useState(\"\");\n  const [photo, setPhoto] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [preparation, setPreparation] = useState(\"\");\n\n  const handleNameChange = (event) => setName(event.target.value);\n  const handleCuisineChange = (event) => setCuisine(event.target.value);\n  const handlePhotoChange = (event) => setPhoto(event.target.value);\n  const handleIngredientsChange = (event) => setIngredients(event.target.value);\n  const handlePreparationChange = (event) => setPreparation(event.target.value);\n\n  const handleClick = (event) => {\n    event.preventDefault(); // Prevent form submission\n\n    // Create a new recipe object\n    const newRecipe = {\n      name,\n      cuisine,\n      photo,\n      ingredients,\n      preparation,\n    };\n\n    // Add the new recipe to the existing recipes array\n    setRecipes([...recipes, newRecipe]);\n\n    // Reset the form fields\n    setName(\"\");\n    setCuisine(\"\");\n    setPhoto(\"\");\n    setIngredients(\"\");\n    setPreparation(\"\");\n  };\n\n  return (\n    <form name=\"create\">\n      <table>\n        <tbody>\n          <tr>\n            <td>\n              <label htmlFor=\"name\">\n                <input\n                  id=\"name\"\n                  type=\"text\"\n                  name=\"name\"\n                  onChange={handleNameChange}\n                  value={name}\n                />\n              </label>\n            </td>\n            <td>\n              <label htmlFor=\"cuisine\">\n                <input\n                  id=\"cuisine\"\n                  type=\"text\"\n                  name=\"cuisine\"\n                  onChange={handleCuisineChange}\n                  value={cuisine}\n                />\n              </label>\n            </td>\n            <td>\n              <label htmlFor=\"photo\">\n                <input\n                  id=\"photo\"\n                  type=\"text\"\n                  name=\"photo\"\n                  onChange={handlePhotoChange}\n                  value={photo}\n                />\n              </label>\n            </td>\n            <td>\n              <textarea\n                id=\"ingredients\"\n                type=\"text\"\n                name=\"ingredients\"\n                onChange={handleIngredientsChange}\n                value={ingredients}\n              />\n            </td>\n            <td>\n              <textarea\n                id=\"preparation\"\n                type=\"text\"\n                name=\"preparation\"\n                onChange={handlePreparationChange}\n                value={preparation}\n              />\n            </td>\n            <td>\n              <button onClick={handleClick} type=\"submit\">\n                Create\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </form>\n  );\n}\n\nexport default RecipeCreate;\n","import React from \"react\";\n\nfunction RecipeList({recipes, setRecipes}) {\n  \n  // TODO: Display the list of recipes using the structure of table that is provided.\n  // TODO: Create at least one additional component that is used by this component.\n  // TODO: Each recipe row must have a delete button - <button name=\"delete\">Delete</button> - that deletes the post when clicked.\n\n  const handleClick = (name) => {\n    // remove the recipe using its name\n    const updatedRecipes = recipes.filter((recipe) => recipe.name !== name);\n    \n    // List the updated recipes\n    setRecipes(updatedRecipes);\n  };\n  \n  const rows = recipes.map(({ name, cuisine, photo, ingredients, preparation }, index) => (\n    <tr key={index}>\n      <td>{name}</td>\n      <td>{cuisine}</td>\n      <td>\n        <img src={photo} alt={`${name}`} />\n      </td>\n      <td className=\"content_td\"><p>{ingredients}</p></td>\n      <td className=\"content_td\"><p>{preparation}</p></td>\n      <td><button name=\"delete\" onClick={() => handleClick(name)}>Delete</button></td>\n    </tr>\n  ));\n    \n  return (\n    <div className=\"recipe-list\">\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Cuisine</th>\n            <th>Photo</th>\n            <th>Ingredients</th>\n            <th>Preparation</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {rows}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default RecipeList;\n","/**\n* This is the data that is initially loaded.\n* Please do not modify this file.\n*/\n\nconst RecipeData = [\n    {\n      name: \"Tuna Poke with Mango\",\n      cuisine: \"Hawaiian\",\n      photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/tunapokebowlwithmango22.jpg\",\n      ingredients: \"1 package of sushi grade tuna. 1 cup cooked quinoa ½ avocado, sliced. ½ mango, cubed. 1 shredded carrot. 1 small sliced cucumber. poke sauce.\",\n      preparation: \"1. Chop tuna into cubes. 2. Toss with 1 tbsp sesame oil and 1 tbsp tamari. Set aside. 3. Layer your poke bowl starting with quinoa. 4. Whisk all poke sauce ingredients in a bowl and pour over the poke bowl. 5. Garnish with sesame seeds and furikake. 6. Top with chopped scallions.\"\n    },\n    {\n      name: \"Guacamole\",\n      cuisine: \"Mexican\",\n      photo: \"https://www.foodista.com/sites/default/files/styles/recype/public/017.jpg\",\n      ingredients: \"3 ripe avocados. ¾ cup finely chopped Roma tomato. 2 serrano chiles very finely chopped (seeded and deveined). 3 heaping tablespoons of finely chopped onion. 3 tablespoons of minced cilantro. Salt to taste\",\n      preparation: \"1. Remove the flesh of the avocados. 2. Mash the avocados with the back of a fork. 3. Add the other ingredients and incorporate evenly. 4. Add salt to taste.\"\n    },\n  ];\n  \n  export default RecipeData;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport RecipeCreate from \"./RecipeCreate\";\nimport RecipeList from \"./RecipeList\";\nimport RecipeData from \"./RecipeData\"\n\nfunction App() {\n  const [recipes, setRecipes] = useState(RecipeData);\n\n  // TODO: Add the ability for the <RecipeList /> component to list and delete an existing recipe.\n  // TODO: Add the ability for the <RecipeCreate /> component to create new recipes.\n\n  return (\n    <div className=\"App\">\n      <header><h1>Delicious Food Recipes</h1></header>\n      <RecipeList recipes={recipes} setRecipes={setRecipes}/>\n      <RecipeCreate recipes={recipes} setRecipes={setRecipes}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\n\nimport App from \"./App\";\n\nReactDOM.createRoot(document.querySelector(\"#root\"))\n  .render(<App />);"],"sourceRoot":""}